[{"C:\\Users\\antho\\code\\valid-form\\client\\src\\index.jsx":"1","C:\\Users\\antho\\code\\valid-form\\client\\src\\App.jsx":"2","C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\validationService.js":"3","C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\authService.js":"4","C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\tokenService.js":"5","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Form.jsx":"6","C:\\Users\\antho\\code\\valid-form\\client\\src\\redux\\redux.js":"7","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Input.jsx":"8","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\InputFeedback.jsx":"9","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\SignupPage\\SignupPage.jsx":"10","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Submit.jsx":"11"},{"size":146,"mtime":1607631013440,"results":"12","hashOfConfig":"13"},{"size":444,"mtime":1611139362062,"results":"14","hashOfConfig":"13"},{"size":2309,"mtime":1610915111748,"results":"15","hashOfConfig":"13"},{"size":755,"mtime":1610916380790,"results":"16","hashOfConfig":"13"},{"size":696,"mtime":1610915111734,"results":"17","hashOfConfig":"13"},{"size":882,"mtime":1611139923792,"results":"18","hashOfConfig":"13"},{"size":2509,"mtime":1611142977211,"results":"19","hashOfConfig":"13"},{"size":1573,"mtime":1619976592550,"results":"20","hashOfConfig":"13"},{"size":336,"mtime":1611047841513,"results":"21","hashOfConfig":"13"},{"size":3828,"mtime":1613526703141,"results":"22","hashOfConfig":"13"},{"size":439,"mtime":1611097558428,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1f1ef27",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\antho\\code\\valid-form\\client\\src\\index.jsx",[],["52","53"],"C:\\Users\\antho\\code\\valid-form\\client\\src\\App.jsx",[],"C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\validationService.js",["54"],"const usernameIsPresent = (username, signal) => ( \r\n  fetch(`/api/valid/isUsernamePresent/${username}`, { signal })\r\n    .then(async res => {\r\n      if(res.ok) {\r\n        const body = await res.json();\r\n        return body.present;\r\n      }\r\n      else {\r\n        const { errors } = await res.json();\r\n        console.log(errors);\r\n      }\r\n    })\r\n    .catch(err => {})\r\n);\r\n\r\nconst emailIsPresent = (email, signal) => ( \r\n  fetch(`/api/valid/isEmailPresent/${email}`, { signal })\r\n    .then(async res => {\r\n      if(res.ok) {\r\n        const body = await res.json();\r\n        return body.present;\r\n      }\r\n      else {\r\n        const { errors } = await res.json();\r\n        console.log(errors);\r\n      }\r\n    })\r\n    .catch(err => {})\r\n);\r\n\r\nasync function signupUsernameIsValid(username, values, validation, signal) {\r\n  if(username === '')\r\n    return [false, 'required']\r\n\r\n  if(username.length < 3)\r\n    return [false, 'too short'];\r\n\r\n  if(username.length > 20)\r\n    return [false, 'too long'];\r\n\r\n  if(!username.match(/^\\w*$/))\r\n    return [false, 'invalid symbols'];\r\n\r\n  if(await usernameIsPresent(username, signal)) {\r\n    return [false, 'already taken']\r\n  }\r\n\r\n  return [true, 'valid'];\r\n}\r\n\r\nasync function signupEmailIsValid(email, values, validation, signal) {\r\n  if(email === '')\r\n    return [false, 'required']\r\n\r\n  if(await emailIsPresent(email, signal)) {\r\n    return [false, 'already taken']\r\n  }\r\n\r\n  return [true, 'valid'];\r\n}\r\n\r\nasync function signupPasswordIsValid(password, values, validation, signal) {\r\n  if(password.length < 3)\r\n    return [false, 'too short'];\r\n  \r\n  return [true, 'valid'];\r\n}\r\n\r\nasync function signupConfirmationIsValid(confirmation, values, validation, signal) {\r\n  if(values.password !== confirmation)\r\n    return [false, 'must match'];\r\n\r\n  return [true, 'valid'];\r\n}\r\n\r\n// all validation functions return [isValid, feedback]\r\nexport const signup = {\r\n  validateUsername: signupUsernameIsValid,\r\n  validateEmail: signupEmailIsValid,\r\n  validatePassword: signupPasswordIsValid,\r\n  validateConfirmation: signupConfirmationIsValid\r\n};\r\n\r\n// export const login = {\r\n//   validateLoginId: loginLoginIdIsValid,\r\n//   validatePassword: loginPasswordIsValid\r\n// };\r\n\r\n// export const profile = {\r\n\r\n// };\r\n\r\nexport default {\r\n  signup,\r\n  // login,\r\n  // profile\r\n}",["55","56"],"C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\authService.js",["57"],"import tokenService from './tokenService';\r\n\r\nconst getLocalUser = () => tokenService.getUserFromToken();\r\n\r\nconst authUtil = async (res, setUser, setErrorMessage) => {\r\n\tif(res.ok) {\r\n\t\tconst { token } = await res.json();\r\n\t\ttokenService.setToken(token);\r\n\r\n\t\tconst id = getLocalUser();\r\n\t\tsetUser(id);\r\n\t}\r\n\telse {\r\n\t\t// const { errors } = await res.json();\r\n\t\tsetErrorMessage('Error: Please try again later');\r\n\t}\r\n};\r\n\r\nconst getSignup = (setUser) => async (payload, setErrorMessage) => {\r\n\tconst res = await fetch('/api/auth/signup', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\tbody: JSON.stringify(payload)\r\n\t});\r\n\t\r\n\tauthUtil(res, setUser, setErrorMessage);\r\n};\r\n\r\nexport default {\r\n\tgetLocalUser,\r\n\tgetSignup,\r\n};\r\n","C:\\Users\\antho\\code\\valid-form\\client\\src\\utils\\tokenService.js",["58"],"function setToken(token) {\r\n  if(token) localStorage.setItem('token', token);\r\n  else localStorage.removeItem('token');\r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if(token) {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  return !!token ? JSON.parse(atob(token.split('.')[1])).id : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken\r\n};\r\n","C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Form.jsx",["59"],"import React, { useEffect } from 'react';\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { initFormAction, store } from '../../redux/redux';\r\n\r\nfunction Form({ children, handleSubmit, validationDelay }) {\r\n    const values = useSelector((state) => state.values);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const initForm = (validationDelay) => dispatch(initFormAction(validationDelay));\r\n\r\n    useEffect(() => {\r\n        initForm(validationDelay || 1000/5);\r\n    }, [validationDelay]);\r\n\r\n    function handleSubmitForm(e) {\r\n        handleSubmit(e, values);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmitForm}>\r\n            {children}\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <Provider store={store}>\r\n            <Form {...props} />\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default Wrapper;","C:\\Users\\antho\\code\\valid-form\\client\\src\\redux\\redux.js",[],"C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Input.jsx",["60"],"C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\InputFeedback.jsx",[],"C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\SignupPage\\SignupPage.jsx",[],"C:\\Users\\antho\\code\\valid-form\\client\\src\\components\\Form\\Submit.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":93,"column":1,"nodeType":"67","endLine":97,"endColumn":2},{"ruleId":"61","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","severity":1,"message":"66","line":29,"column":1,"nodeType":"67","endLine":32,"endColumn":3},{"ruleId":"65","severity":1,"message":"66","line":27,"column":1,"nodeType":"67","endLine":32,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":15,"column":8,"nodeType":"72","endLine":15,"endColumn":25,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":27,"column":8,"nodeType":"72","endLine":27,"endColumn":19,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["76"],["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initForm'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'initField'. Either include it or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [initForm, validationDelay]",{"range":"84","text":"85"},"Update the dependencies array to be: [fieldname, initField]",{"range":"86","text":"87"},[503,520],"[initForm, validationDelay]",[992,1003],"[fieldname, initField]"]